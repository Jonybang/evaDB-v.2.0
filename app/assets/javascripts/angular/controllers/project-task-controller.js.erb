/**
 * Created by jonybang on 03.07.15.
 */
'use strict';

var app = angular.module('app');

app.controller('ProjectTasksController', ['$scope', 'ProjectTask', '$routeParams', 'ModalService', function($scope, ProjectTask, $routeParams, ModalService) {
    //Grab all the comments from the server
    var project_id = $routeParams.id;
    $scope.project_tasks = ProjectTask.query({project_id: project_id});

    $scope.edit = function (index){
        var task_id;
        if(index || index === 0)
            task_id = $scope.project_tasks[index].id;

        ModalService.showModal({
            templateUrl: '<%= asset_path('angular/templates/modals/project-task-form.html') %>',
            controller: 'ProjectTaskFormController',
            inputs: {
                project_id: project_id,
                task_id: task_id
            }
        }).then(function(modal) {
            // The modal object has the element built, if this is a bootstrap modal
            // you can call 'modal' to show it, if it's a custom modal just show or hide
            // it as you need to.
            modal.element.modal();
            modal.close.then(function(result) {
                $scope.project_tasks.unshift(result);
                //$scope.project_tasks = ProjectTask.query({project_id: $routeParams.id});

                $scope.message = result ? "You said Yes" : "You said No";
                //TODO: Убрать костыль
                $('.modal-backdrop').remove();
                $('body').removeClass('modal-open');
            });
        });
    }
}]);

app.controller('ProjectTaskFormController', ['$scope', 'ProjectTask', '$routeParams', 'close', 'project_id', 'task_id', function($scope, ProjectTask, $routeParams, close, project_id, task_id) {
    //Grab all the comments from the server
    //TODO: Заставить работать редактирование существующей задачи
    $scope.task = task_id ? ProjectTask.query({id: task_id}) : {};
    $scope.task.project_id = project_id;

    //Define a 'save' method which will be called from the view.
    $scope.save = function() {
        //Create the comment object to be sent to the server
        //TODO: Сделать валидацию
        var obj = new ProjectTask($scope.task);

        //Attempt a save to the back-end
        obj.$save(function(response) {
            //TODO: ответ приходит с _id, а нужно сделать чтобы приходил с id
            response.id = response._id;
            //If we're successful then add the response (the object as the server sees it)
            // to our collection of comments

            close(response, 200);

        }, function(response) {

            //If there's a failure set the 'errors' scope variable so it'll be reflected in the view.
            $scope.errors = response.data.errors;
        });
    }
}]);
