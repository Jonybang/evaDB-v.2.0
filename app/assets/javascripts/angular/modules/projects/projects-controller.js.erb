/**
 * Created by jonybang on 03.07.15.
 */
'use strict';

var app = angular.module('app.projects');

app.controller('ProjectsIndexCtrl', ['$scope', 'Project', 'User', function($scope, Project, User) {
    User.get_contact().then(function(result){
        $scope.contact = result;
        Project.query({contact_id:result.id}).then(function(projects){
            $scope.projects =projects;
        });
    });

    $scope.destroy = function(index) {
        Project.remove({id: $scope.projects[index].id}, function() {
            $scope.projects.splice(index, 1);
        });
    }
}]);

app.controller('ProjectsCreateCtrl', ['$scope', '$state', 'Project', 'User', function($scope, $state, Project, User) {
    User.get_contact().then(function(result){
        $scope.contact = result;
    });
    $scope.save = function() {
        $scope.$broadcast('show-errors-check-validity');
        if (!$scope.projectForm.$valid) {
            return;
        }

        $scope.project.contact_id = $scope.contact.id;
        var project = new Project($scope.project).create();

        project.then(function(response) {
            $state.go('app.projects.show.tasks.table', {projectId: response.id});

        }, function(response) {
            $scope.errors = response.data.errors;
        });
    }
}]);

app.controller('ProjectsShowCtrl', ['$scope', 'Project', '$state', function($scope, Project, $state) {
    $scope.project = {};
    Project.get($state.params.projectId).then(function(project){
        angular.extend($scope.project, project);
    });

    $scope.tabsData = [
        { route : 'app.projects.show.description', heading : 'Описание' },
        { route : 'app.projects.show.tasks.table', heading : 'Задачи'},
        { route : '#', heading : 'Ресурсы', disabled: true },
        { route : '#', heading : 'Документы', disabled: true },
        { route : '#', heading : 'Метрики', disabled: true },
        { route : '#', heading : 'Инфографика', disabled: true }
    ];
}]);

app.controller('ProjectsDescCtrl', ['$scope', 'Project', '$state', function($scope, Project, $state) {
    //Если после подгрузки контроллера загрузка проекта все еще идет в родительском контроллере
    //то подписываемся на результат загрузки
    if(!$scope.$parent.project.name)
        $scope.project = $scope.$parent.project;
    else
        $scope.project = Project.get({id: $state.params.projectId});
}]);

app.controller('ProjectsTasksCtrl', ['$scope', 'ProjectTask', 'Gantt', 'Helpers', '$state', 'TaskEditor', function($scope, ProjectTask, Gantt, Helpers, $state, TaskEditor) {
    $scope.tabsData = [
        { route : 'app.projects.show.tasks.table', heading : 'Таблица' },
        { route : 'app.projects.show.tasks.scheme', heading : 'Схема', disabled: true },
        { route : 'app.projects.show.tasks.map', heading : 'Дорожная карта', disabled: true }
    ];
    var self = this;
    var project_id = $state.params.projectId;
    function getTasks(){
        ProjectTask.query({project_id: project_id, with_resources: 1}).then(function (tasks) {
            $scope.project_tasks = self.project_tasks = tasks;
        });
    }
    getTasks();

    $scope.destroy = function(task) {
        ProjectTask.remove({id: task.id, project_id: project_id}, function() {
            Helpers.removeById($scope.project_tasks, task.id);

            //Gantt.redraw($scope.project_tasks);
        });
    };

    $scope.newOrEdit = function (task, parent_task_id){
        //Добавляет или редактирует задачу или подзадачу
        //Если задача передана(task) - то редактируем её
        //Если нет - то создаем новую задачу в текущем проекте
        //Если вместе с задачей(task) передан id родительской задачи(parent_task_id)
        //то задача добавляется подзадачей в родительскую

        TaskEditor({project_id: project_id, parent_task_id: parent_task_id}, task).then(function(result){
            if(result.is_new){
                getTasks();
            } else {
                //Если это задача не является подзадачей
                if(!parent_task_id){
                    //добавляем её в проект
                    Helpers.addOrReplace($scope.project_tasks, result, result.id, true);
                }
                else{
                    //иначе, добавляем её в родительскую задачу
                    Helpers.addItemToParentObjectInArrayById($scope.project_tasks, result, parent_task_id, 'child_tasks');
                }
            }
        });
    };
    $scope.getSubTasks = function (parent_task){
        parent_task.child_tasks = ProjectTask.query({project_id: project_id, parent_task_id: parent_task.id });
    }
}]);